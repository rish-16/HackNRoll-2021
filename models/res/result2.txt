will help MIT OpenCourseWare continue to. offer high quality educational resources. and if you haven't programmed before I. think this is a fairly tough concept to. examples and just by looking at the code. quickly so let's talk a little bit about. objects and we've seen objects in Python. is of type integer the number 5 is a. different object that's of type integer. represented in Python and some ways that. we can interact with them ok so the idea. this lecture I think we'll really get at. dictionaries lists those are all objects. you have these once you've created these. delete an item remove it concatenate two. that is of type list okay again we think. one is going to be the value at specific. right you can get you can index into a. list you can add two lists together you. can get the length you can append to the. right so these are all ways that you can. to implement a sort we don't know ok you. with a program into these packages these. we talked about functions and that means. we're going to sort of separate the code. code that implements a list class and we. essentially create a new object that has. just use the list class like this so you. types okay so now you're going to define. which are going to define your own types. of a coordinate object okay and a. coordinate object is essentially going. to be an object that's going to define a. point in an XY plane okay so X comma Y. is going to be a coordinate in a 2d. Python all right so we've told python we. procedures with an object of a different. known as methods and you can think of a. method as a function except that it's a. function that only were. methods you're defining ways that people. this distance method was only defined to. work with to coordinate type objects all. underscore underscore and it's a special. of the class okay so we're defining this. initialize a data a coordinate object by. and the Y data attribute for a. particular object is going to be. specification so the doc string with the. specification the code might not work as. because there isn't anything cool we can. differences which you'll see in a moment. the operation on so alway pretty much by. okay so here I'm going to just implement. some name it takes in parameters it does. in order to decide whose data attributes. want to use this method to figure out a. distance between two coordinate objects. it this other parameter an easier way to. ok and this is what you've been using so. object of type coordinate at this memory. print the type when you print the object. just like in it is because it starts and. ends with double underscores and the the. underscore STR underscore underscore and. definition of STR in this case let's say. is going to be new okay so we define the. itself okay there's no other are there's. it three four as we have been and assign. STR method so when we print C it's going. which can add some cool functionality to. method and you try to add two objects of. and one for the denominator so when I. create a fraction object I'm going to. as its data attributes and I'm assigning. those to be whatever's passed into my in. let's look at the add for the moment how. going to take self which is the which is. new top of the of the resulting fraction. so it's the it's my numerator multiplied. once I figure out the top and the bottom. object okay it's not a number it's not a. float it's not an integer it's a new. called inverse and this is just going to. calling this method on and so it's going. that just has the denominator as the top. bottom it's going to turn a new fraction. so it prints 16 over 16 if I print float. the method the name of the class name of. value here 1.0 and then here i'm calling. these objects you know are going to have.