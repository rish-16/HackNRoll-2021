{"version":3,"sources":["height-observer.tsx","streamlit-player.tsx","index.tsx"],"names":["HeightObserver","children","fixedHeight","onChange","useState","container","setContainer","changeCallback","useCallback","useEffect","document","body","scrollHeight","ro","ResizeObserver","entries","entry","find","target","contentRect","height","observe","disconnect","ref","node","StreamlitPlayer","props","player","getRangeContainingTime","time","args","ranges","forEach","range","start","end","getNextRangeForTime","i","length","currRange","onProgress","playedSeconds","current","undefined","console","log","nextRange","seekTo","setState","playing","React","createRef","state","playerEvents","events","this","name","data","Streamlit","setComponentValue","duration","url","loop","controls","light","volume","muted","playbackRate","playInline","progressInterval","config","getDuration","gradientString","prevEndPercentage","startPercentage","endPercentage","slice","heatmapStyle","width","margin","background","setFrameHeight","playsinline","id","style","Component","WrappedStreamlitPlayer","withStreamlitConnection","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.782edf54.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\"\nimport ResizeObserver from \"resize-observer-polyfill\"\n\ninterface HeightObserverProps {\n  children?: any\n  fixedHeight?: number\n  onChange: (height: number) => void\n}\n\nconst HeightObserver = ({ children, fixedHeight, onChange }: HeightObserverProps) => {\n  const [container, setContainer] = useState<HTMLDivElement | null>(null)\n  const containerRef = (node: HTMLDivElement) => setContainer(node)\n\n  const changeCallback = useCallback(onChange, [])\n\n  useEffect(() => {\n    // Initialize height\n    changeCallback(fixedHeight || document.body.scrollHeight)\n\n    // Change height dynamically if fixedHeight is not set\n    if (!fixedHeight && container) {\n\n      // Call onChange with new height as parameter\n      const ro = new ResizeObserver(entries => {\n        const entry = entries.find(entry => entry.target === container)\n        if (entry) {\n          changeCallback(entry.contentRect.height)\n        }\n      })\n\n      // Start observing div height changes\n      ro.observe(container)\n\n      // Unobserve div on unmount\n      return () => {\n        ro.disconnect()\n      }\n    }\n  }, [container, fixedHeight, changeCallback])\n\n  return (\n    <div ref={containerRef}>\n      {children}\n    </div>\n  )\n}\n\nexport default HeightObserver\n","import {\n  Streamlit,\n  ComponentProps,\n  withStreamlitConnection\n} from \"streamlit-component-lib\"\nimport React, { Component } from \"react\"\n\nimport ReactPlayer from \"react-player\"\nimport HeightObserver from \"./height-observer\"\n\ninterface ComponentState {\n  playerEvents: any;\n  playing: boolean;\n}\nclass StreamlitPlayer extends Component<ComponentProps, ComponentState> {\n  player: any;\n\n\n\n  constructor(props: ComponentProps) {\n    super(props);\n    this.player = React.createRef()\n    this.state = {\n      playerEvents: {},\n      playing: false\n    }\n  }\n\n  componentDidMount() {\n    let events: any = {}\n\n    this.props.args.events.forEach((name: string) => {\n      events[name] = (data?: any) => {\n        Streamlit.setComponentValue({\n          name: name,\n          data: data\n        })\n      }\n    })\n\n    this.setState({ playerEvents: events })\n  }\n\n  getRangeContainingTime = (time: number) => {\n    const { ranges } = this.props.args\n    ranges.forEach((range: any) => {\n      // if time is in range\n      if (time >= range.start && time <= range.end)\n        return range\n\n      if (time < range.start)\n        return null\n\n    })\n    return null\n  }\n\n  getNextRangeForTime = (time: number) => {\n    const { ranges } = this.props.args\n    for (let i = 0; i < ranges.length; i++) {\n      let currRange = ranges[i]\n      // if already in a range\n      if (time >= currRange.start && time <= currRange.end)\n        return null\n\n      // use the first range which has a start larger than time\n      if (time < currRange.start)\n        return currRange\n    }\n    return null\n  }\n\n  // onProgress({ playedSeconds }: { playedSeconds: number }) {\n  onProgress = ({ playedSeconds }: { playedSeconds: number }) => {\n    if (this.player?.current === null || this.player?.current === undefined)\n      return\n\n    console.log('onProgress')\n    // if (playedSeconds < 30) {\n    //   this.player.current.seekTo(30)\n    //   this.setState({ playing: true })\n    // }\n    let nextRange = this.getNextRangeForTime(playedSeconds)\n    if (nextRange !== null) {\n      this.player.current.seekTo(nextRange.start)\n      this.setState({ playing: true })\n    }\n\n  }\n\n  render() {\n    const {\n      url,\n      height,\n      loop,\n      controls,\n      light,\n      volume,\n      muted,\n      playbackRate,\n      progressInterval,\n      playInline,\n      config,\n      time,\n    } = this.props.args\n\n    const { playerEvents, playing } = this.state\n\n    let duration;\n    if (this.player.current !== null && this.player.current !== undefined) {\n      // console.log(this.player.current)\n      // console.log(this.player.current !== null)\n      // this.player.current.seekTo(time)\n      // console.log(`seek ${time}`)\n      duration = this.player.current.getDuration()\n    }\n\n\n\n    // only make gradient string if duration is available\n    let gradientString = \"rgba(0,0,255,1) 0%, \"\n    console.log('render')\n    console.log(duration)\n    if (duration !== undefined && duration !== null) {\n      const { ranges } = this.props.args\n      let prevEndPercentage = 0;\n\n      // const hotColor = '#f29492'\n      // const hotColor = 'rgba(192, 57, 43,1.0)'\n      // const hotColor = 'rgba(192, 57, 43,1.0)'\n      const hotColor = '#E8E419'\n      // const coldColor = '#114357'\n      const coldColor = '#1F958B'\n\n      for (let range of ranges) {\n        let startPercentage = range.start / duration * 100\n        let endPercentage = range.end / duration * 100\n\n        // middle of the prev end and this start\n        // gradientString += `rgba(52, 152, 219, 1) ${(prevEndPercentage + startPercentage)/2}%, `\n\n        gradientString += `${coldColor} ${(prevEndPercentage + startPercentage)/2}%, `\n\n        // gradientString += `rgba(255,0,0,1) ${startPercentage}%, `\n        // gradientString += `rgba(255,0,0,1) ${endPercentage}%, `\n\n        // gradientString += `rgba(231, 76, 60, 1) ${startPercentage}%, `\n        // gradientString += `rgba(231, 76, 60, 1) ${endPercentage}%, `\n        \n        gradientString += `${hotColor} ${startPercentage}%, `\n        gradientString += `${hotColor} ${endPercentage}%, `\n\n        prevEndPercentage = endPercentage\n      }\n    }\n\n    // remove the last comma and space\n    gradientString = gradientString.slice(0, gradientString.length - 2)\n\n    // console.log((gradientString && {background: `linear-gradient(90deg, ${gradientString})`}))\n\n    let heatmapStyle: any = {\n      height: 25,\n      width: 'calc(100%-12*2px)',\n      margin: '0 12px',\n     ...(gradientString && {background: `linear-gradient(90deg, ${gradientString})`}),\n    }\n\n    console.log(heatmapStyle)\n\n\n\n    return (\n      <>\n        <HeightObserver onChange={Streamlit.setFrameHeight} fixedHeight={height}>\n          <ReactPlayer\n            ref={this.player}\n            // youtubeConfig={{\n            //   playerVars: {\n            //     start: 33\n            //   }\n            // }}\n            url={url}\n            width=\"100%\"\n            height={height || undefined}\n            // playing={playing || undefined}\n            playing={playing}\n            loop={loop || undefined}\n            controls={controls || undefined}\n            light={light || undefined}\n            volume={volume}\n            muted={muted || undefined}\n            playbackRate={playbackRate}\n            // progressInterval={progressInterval}\n            progressInterval={200}\n            playsinline={playInline || undefined}\n            config={config || undefined}\n            {...playerEvents}\n            onProgress={this.onProgress}\n          />\n        <div id='heatmap' style={heatmapStyle}/>\n        </HeightObserver>\n      </>\n    )\n  }\n}\n\nconst WrappedStreamlitPlayer = withStreamlitConnection(StreamlitPlayer)\n\nexport { StreamlitPlayer, WrappedStreamlitPlayer }","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { StreamlitPlayer, WrappedStreamlitPlayer } from \"./streamlit-player\"\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* run for Streamlit */}\n    <WrappedStreamlitPlayer/>\n\n    {/* run for development */}\n    {/* <StreamlitPlayer\n        args={{\n          url: 'https://www.youtube.com/watch?v=-DP1i2ZU9gk',\n          events: [],\n          controls: true,\n          ranges: [\n            {start: 0.79, end: 4.73\n            },\n            {start: 58.21, end: 62.77\n            },\n            {start: 80.28, end: 91.0\n            },\n            {start: 102.12, end: 106.92\n            },\n            {start: 110.73, end: 114.58\n            },\n            {start: 133.1, end: 137.69\n            },\n            {start: 137.69, end: 141.32\n            },\n            {start: 147.62, end: 149.74\n            },\n            {start: 149.74, end: 153.519\n            },\n            {start: 160.544, end: 164.87\n            },\n            {start: 174.29, end: 183.98\n            },\n            {start: 207.81, end: 211.79\n            },\n            {start: 261.149, end: 264.58\n            },\n            {start: 307.73, end: 309.93\n            },\n            {start: 313.5, end: 316.337\n            },\n            {start: 318.42, end: 323.26\n            },\n            {start: 329.03, end: 334.28\n            },\n            {start: 358.93, end: 364.34\n            },\n            {start: 400.7, end: 405.23\n            },\n            {start: 503.3, end: 520.3090000000001\n            },\n            {start: 556.056, end: 561.8639999999999\n            },\n            {start: 633.55, end: 637.8399999999999\n            },\n            {start: 667.4, end: 672.052\n            },\n            {start: 694.46, end: 697.1700000000001\n            },\n            {start: 722.21, end: 726.74\n            },\n            {start: 736.58, end: 739.47\n            },\n            {start: 741.82, end: 747.0\n            },\n            {start: 820.91, end: 824.1\n            },\n            {start: 824.1, end: 830.52\n            },\n            {start: 841.38, end: 846.36\n            },\n            {start: 875.74, end: 879.64\n            },\n            {start: 1011.871, end: 1020.81\n            },\n            {start: 1020.81, end: 1027.839\n            },\n            {start: 1032.99, end: 1037.589\n            },\n            {start: 1037.589, end: 1043.52\n            },\n            {start: 1060.597, end: 1064.01\n            },\n            {start: 1201.8, end: 1208.81\n            },\n            {start: 1259.45, end: 1265.21\n            },\n            {start: 1334.74, end: 1339.63\n            },\n            {start: 1431.11, end: 1434.83\n            },\n            {start: 1434.83, end: 1437.9199999999998\n            },\n            {start: 1472.32, end: 1474.56\n            },\n            {start: 1477.06, end: 1483.49\n            },\n            {start: 1490.32, end: 1492.63\n            },\n            {start: 1500.41, end: 1514.74\n            },\n            {start: 1514.74, end: 1518.124\n            },\n            {start: 1535.59, end: 1542.91\n            },\n            {start: 1616.59, end: 1625.16\n            },\n            {start: 1682.08, end: 1684.99\n            },\n            {start: 1711.0, end: 1719.65\n            },\n            {start: 1782.17, end: 1787.77\n            },\n            {start: 1850.78, end: 1860.29\n            },\n            {start: 1860.29, end: 1867.93\n            },\n            {start: 2000.454, end: 2006.36\n            },\n            {start: 2008.55, end: 2011.74\n            },\n            {start: 2034.256, end: 2038.4\n            },\n            {start: 2060.81, end: 2064.02\n            },\n            {start: 2103.25, end: 2126.566\n            },\n            {start: 2138.18, end: 2142.41\n            },\n            {start: 2227.14, end: 2237.96\n            },\n            {start: 2300.94, end: 2308.87\n            },\n            {start: 2308.87, end: 2311.6\n            },\n            {start: 2330.55, end: 2334.73\n            },\n            {start: 2337.962, end: 2339.92\n            },\n            {start: 2410.72, end: 2427.43\n            },\n            {start: 2427.43, end: 2436.85\n            },\n            {start: 2443.35, end: 2457.56\n            },\n            {start: 2466.24, end: 2473.03\n            }\n          ]\n        }}\n        width={200}\n        disabled={false}\n    /> */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}